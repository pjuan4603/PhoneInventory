{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\phone-app\\\\src\\\\components\\\\Table\\\\PhoneTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport axios from \"axios\";\nimport \"./PhoneTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"http://localhost:8080/phones\";\nexport default function PhoneTable({\n  queryString\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = baseURL + \"?\" + queryString;\n        console.log('Query:', queryString);\n        console.log(url);\n        const response = await axios.get(url);\n        setData(response.data);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Invalid input, please check storage and price inputs.');\n      }\n    };\n    if (queryString) {\n      fetchData();\n    }\n  }, [queryString]);\n  const columns = [{\n    name: \"Brand\",\n    selector: row => row.brand,\n    sortable: true\n  }, {\n    name: \"Model\",\n    selector: row => row.model,\n    sortable: true\n  }, {\n    name: \"Storage (GB)\",\n    selector: row => row.storage,\n    sortable: true\n  }, {\n    name: \"Color\",\n    selector: row => row.color,\n    sortable: true\n  }, {\n    name: \"Price\",\n    selector: row => row.price,\n    sortable: true,\n    cell: row => `$${row.price}`\n  }];\n  const paginationOptions = {\n    rowsPerPageText: 'Rows per page:',\n    rangeSeparatorText: 'of',\n    selectAllRowsItem: true,\n    selectAllRowsItemText: 'All'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container mt-10 margin-top\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data,\n      fixedHeader: true,\n      pagination: true,\n      paginationPerPage: 10,\n      paginationRowsPerPageOptions: [5, 10, 15, 20],\n      paginationComponentOptions: paginationOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(PhoneTable, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = PhoneTable;\nvar _c;\n$RefreshReg$(_c, \"PhoneTable\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","axios","jsxDEV","_jsxDEV","baseURL","PhoneTable","queryString","_s","data","setData","error","setError","fetchData","url","console","log","response","get","columns","name","selector","row","brand","sortable","model","storage","color","price","cell","paginationOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","class","children","className","role","fileName","_jsxFileName","lineNumber","columnNumber","fixedHeader","pagination","paginationPerPage","paginationRowsPerPageOptions","paginationComponentOptions","_c","$RefreshReg$"],"sources":["D:/git/phone-app/src/components/Table/PhoneTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport axios from \"axios\";\r\nimport \"./PhoneTable.css\";\r\n\r\nconst baseURL = \"http://localhost:8080/phones\";\r\n\r\nexport default function PhoneTable({ queryString }) {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const url = baseURL + \"?\" + queryString;\r\n                console.log('Query:', queryString);\r\n                console.log(url);\r\n                const response = await axios.get(url);\r\n                setData(response.data);\r\n                setError(null);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setError('Invalid input, please check storage and price inputs.');\r\n            }\r\n        };\r\n\r\n        if (queryString) {\r\n            fetchData();\r\n        }\r\n    }, [queryString]);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: \"Brand\",\r\n            selector: (row) => row.brand,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Model\",\r\n            selector: (row) => row.model,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Storage (GB)\",\r\n            selector: (row) => row.storage,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Color\",\r\n            selector: (row) => row.color,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Price\",\r\n            selector: (row) => row.price,\r\n            sortable: true,\r\n            cell: row => `$${row.price}`\r\n        },\r\n    ];\r\n\r\n    const paginationOptions = {\r\n        rowsPerPageText: 'Rows per page:',\r\n        rangeSeparatorText: 'of',\r\n        selectAllRowsItem: true,\r\n        selectAllRowsItemText: 'All'\r\n    };\r\n\r\n    return (\r\n\r\n        <div class=\"container mt-10 margin-top\">\r\n            {error && (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {error}\r\n                </div>\r\n            )}\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                fixedHeader\r\n                pagination\r\n                paginationPerPage={10}\r\n                paginationRowsPerPageOptions={[5, 10, 15, 20]}\r\n                paginationComponentOptions={paginationOptions}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}